<types namespace="_goa">
  <interface name="Accepts" desc="Higher-Level Content Negotiation.">
    <fn name="constructor">
      <arg type="!http.IncomingMessage" name="req">The request.</arg>
      Create a new Accepts object for the given request from a client.
    </fn>
    <fn return="string|!Array<string>|boolean" name="types" alias="type" example="../example/jsdoc/types.js">
      <arg type="!Array<string>|string" name="type" opt>
        The type to check as a parameter, or multiple types as an array.
      </arg>
      <arg type="string" name="...types">
        Types to check as parameters.
      </arg>
      Check if the given `type(s)` is acceptable, returning the best match when true, otherwise `false`, in which case you should respond with 406 "Not Acceptable".

      The `type` value may be a single mime type string such as "application/json", the extension name such as "json" or an array `["json", "html", "text/plain"]`. When a list or array is given the _best_ match, if any is returned. When no types are given as arguments, returns all types accepted by the client in the preference order.
    </fn>
    <fn return="string|!Array<string>|boolean" name="encoding" alias="encodings">
      <arg type="!Array<string>|string" name="encoding" opt>
        The encoding to check as a parameter, or multiple encodings as an array.
      </arg>
      <arg type="string" name="...encodings">
        Encodings to check as parameters.
      </arg>
      Return accepted encodings or best fit based on `encodings`. Given `Accept-Encoding: gzip, deflate` an array sorted by quality is returned: `['gzip', 'deflate']`.
    </fn>
    <fn return="string|!Array<string>|boolean" name="charset" alias="charsets">
      <arg type="!Array<string>|string" name="charset" opt>
        The charset to check as a parameter, or multiple charsets as an array.
      </arg>
      <arg type="string" name="...charsets">
        Charsets to check as parameters.
      </arg>
      Return accepted charsets or best fit based on `charsets`. Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5` an array sorted by quality is returned: `['utf-8', 'utf-7', 'iso-8859-1']`.
    </fn>
    <fn return="string|!Array<string>|boolean" name="language" aliases="languages,langs,lang">
      <arg type="!Array<string>|string" name="language" opt>
        The language to check as a parameter, or multiple languages as an array.
      </arg>
      <arg type="string" name="...languages">
        Languages to check as parameters.
      </arg>
      Return accepted languages or best fit based on `langs`. Given `Accept-Language: en;q=0.8, es, pt` an array sorted by quality is returned: `['es', 'pt', 'en']`.
    </fn>
  </interface>
</types>